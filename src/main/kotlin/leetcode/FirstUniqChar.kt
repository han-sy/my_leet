package leetcode

fun main(args : Array<String>) {
    println(FirstUniqChar().firstUniqChar(""))
//    println(FirstUniqChar().firstUniqChar("loveleetcode"))
}
class FirstUniqChar {

    fun firstUniqChar(s: String): Int {
        var alphabets = IntArray(26) {0}

        for(i in s.indices) {
            alphabets[s[i].toInt() - 97] = alphabets[s[i].toInt() - 97] + 1
            println("${s[i].toInt() - 97} : ${alphabets[s[i].toInt() - 97]} ")
        }

        for(i in s.indices) {
            if(alphabets[s[i].toInt() - 97] == 1) {
                return i
            }
        }
        return -1



    }

//    private fun isOnly(index: Int, s : String): Boolean {
//        return s.count { v -> v == s[index] } == 1
//    }
}